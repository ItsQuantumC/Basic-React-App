{"ast":null,"code":"var _jsxFileName = \"/Users/omkar/Desktop/React2/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChar = value => value.trim().length === 6;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalCodeIsValid = isFiveChar(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostal,\n      city: enteredCity\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\n  const PostalControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: PostalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a Postal Code (atleast 5 characters long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"slQt6QZR3vSybmki3OrSj/OdAHE=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/omkar/Desktop/React2/src/components/Cart/Checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChar","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","enteredCityIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","PostalControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\nconst isEmpty = value => value.trim() === '';\nconst isFiveChar = value => value.trim().length ===6;\n\nconst Checkout = (props) => {\n    const [formInputValidity, setFormInputValidity] = useState({\n        name: true,\n        street: true,\n        city: true,\n        postalCode: true\n    })\n\n    const nameInputRef = useRef();\n    const streetInputRef = useRef();\n    const postalCodeInputRef = useRef();\n    const cityInputRef = useRef();\n    const confirmHandler = (event) => {\n        event.preventDefault();\n\n        const enteredName = nameInputRef.current.value;\n        const enteredStreet = streetInputRef.current.value;\n        const enteredPostal = postalCodeInputRef.current.value;\n        const enteredCity = cityInputRef.current.value;\n\n        const enteredNameIsValid = !isEmpty(enteredName);\n        const enteredStreetIsValid = !isEmpty(enteredStreet);\n        const enteredPostalCodeIsValid = isFiveChar(enteredPostal);\n        const enteredCityIsValid = !isEmpty(enteredCity);\n\n        setFormInputValidity({\n            name: enteredNameIsValid,\n            street: enteredStreetIsValid,\n            city: enteredCityIsValid,\n            postalCode: enteredPostalCodeIsValid\n        })\n\n        const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalCodeIsValid && enteredCityIsValid;\n\n        if (!formIsValid) {\n            return;\n        }\n\n        props.onConfirm({\n            name: enteredName,\n            street: enteredStreet,\n            postalCode: enteredPostal,\n            city: enteredCity\n        })\n\n    };\n\n    const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`\n    const streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`\n    const PostalControlClasses = `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`\n    const cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`\n    \n    return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formInputValidity.name && <p>Please enter a valid name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputValidity.street && <p>Please enter a valid street</p>}\n      </div>\n      <div className={PostalControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef} />\n        {!formInputValidity.postalCode && <p>Please enter a Postal Code (atleast 5 characters long)</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputValidity.city && <p>Please enter a valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n    );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}